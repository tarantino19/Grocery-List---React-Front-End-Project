{"ast":null,"code":"import _toConsumableArray from\"/Users/tarantino/Desktop/grocerybuddy/grocerybud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/tarantino/Desktop/grocerybuddy/grocerybud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/tarantino/Desktop/grocerybuddy/grocerybud/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import List from'./List';import Alert from'./Alert';var getLocalStorage=function getLocalStorage(){var list=localStorage.getItem('list');if(list){return JSON.parse(localStorage.getItem('list'));}else{return[];}};function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(getLocalStorage()),_useState4=_slicedToArray(_useState3,2),list=_useState4[0],setList=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isEditing=_useState6[0],setIsEditing=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),editID=_useState8[0],setEditID=_useState8[1];var _useState9=useState({show:false,msg:'',type:''}),_useState10=_slicedToArray(_useState9,2),alert=_useState10[0],setAlert=_useState10[1];function handleSubmit(e){e.preventDefault();if(!name){showAlert(true,'danger','please enter a value');}else if(name&&isEditing){//if name is true (there's a value inside, and isEditing is true...then do this...)\nsetList(list.map(function(item){if(item.id===editID){//if item.id matches w/ item id, then...\nreturn _objectSpread(_objectSpread({},item),{},{title:name});// change title to whatever is statevalue right now\n}return item;}));setName(\"\");setEditID(null);setIsEditing(false);showAlert(true,'success','list updated');}else{var newItem={id:Date.now()+Math.random(),title:name};setList([].concat(_toConsumableArray(list),[newItem]));setName(\"\");showAlert(true,'success',\"\".concat(newItem.title,\" added to the list\"));}}function showAlert(){var show=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"\";var msg=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"\";setAlert({show:show,type:type,msg:msg});}function clearList(){showAlert(true,'danger','empty list');setList(\"\");}function removeItem(id){showAlert(true,'danger','item removed');var newList=list.filter(function(item){return item.id!==id;});setList(newList);//newList will be displayed\n// if item.id does not match with new id, then it will be added to new array - ID DID NOT MATCH\n}//list was the statevalue\nfunction editItem(id){var specificItem=list.find(function(item){return item.id===id;});setIsEditing(true);setEditID(id);setName(specificItem.title);//display which item am i editing in the input\n}//here we want to find the id whose id matches the item.id\nuseEffect(function(){localStorage.setItem('list',JSON.stringify(list));},[list]);return/*#__PURE__*/React.createElement(\"section\",{className:\"section-center\"},/*#__PURE__*/React.createElement(\"form\",{className:\"grocery-form\",onSubmit:handleSubmit},alert.show&&/*#__PURE__*/React.createElement(Alert,Object.assign({},alert,{removeAlert:showAlert,list:list})),/*#__PURE__*/React.createElement(\"h3\",null,\"Grocery Buddy\"),/*#__PURE__*/React.createElement(\"div\",{className:\"form-control\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"grocery\",placeholder:\"e.g. lots of bacon\",value:name,onChange:function onChange(e){return setName(e.target.value);}}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"submit-btn\"},isEditing?\"edit\":\"submit\"))),list.length>0&&/*#__PURE__*/React.createElement(\"div\",{className:\"grocery-container\"},/*#__PURE__*/React.createElement(List,{items:list,removeItem:removeItem,editItem:editItem}),/*#__PURE__*/React.createElement(\"button\",{className:\"clear-btn\",onClick:clearList},\"Clear Items\")));}export default App;","map":{"version":3,"sources":["/Users/tarantino/Desktop/grocerybuddy/grocerybud/src/App.js"],"names":["React","useState","useEffect","List","Alert","getLocalStorage","list","localStorage","getItem","JSON","parse","App","name","setName","setList","isEditing","setIsEditing","editID","setEditID","show","msg","type","alert","setAlert","handleSubmit","e","preventDefault","showAlert","map","item","id","title","newItem","Date","now","Math","random","clearList","removeItem","newList","filter","editItem","specificItem","find","setItem","stringify","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Alert from './Alert'\n\nconst getLocalStorage = () => {\n      let list = localStorage.getItem ('list')\n      if (list) {\n        return JSON.parse (localStorage.getItem ('list'))\n      }\n      else {\n        return []\n      }\n}\n\nfunction App() {\n  const [name, setName] = useState (\"\")\n  const [list, setList] = useState (getLocalStorage ())\n  const [isEditing, setIsEditing] = useState (false)\n  const [editID, setEditID] = useState (null)\n  const [alert, setAlert] = useState ({show: false, msg: '', type: '' })\n\nfunction handleSubmit (e) {\n  e.preventDefault ()\n  if (!name) {\n    showAlert (true, 'danger', 'please enter a value')\n  }\n  else if (name && isEditing) {   //if name is true (there's a value inside, and isEditing is true...then do this...)\n    setList (list.map ((item) => {\n      if (item.id === editID) {  //if item.id matches w/ item id, then...\n        return {...item, title: name} // change title to whatever is statevalue right now\n      }\n        return item\n    }))\n      setName (\"\");\n      setEditID (null)\n      setIsEditing (false)\n      showAlert (true, 'success', 'list updated')\n  } \n  else {\n    const newItem = {\n      id: Date.now() + Math.random(),\n      title: name\n};\n      setList ([... list, newItem])\n      setName (\"\")\n      showAlert (true, 'success', `${newItem.title} added to the list`)\n  }\n}\n\n\nfunction showAlert (show=false, type=\"\", msg=\"\") {\n    setAlert ({show, type, msg})\n}\n\nfunction clearList () {\n    showAlert (true, 'danger', 'empty list')\n    setList (\"\")\n}\n\nfunction removeItem (id) {\n  showAlert (true, 'danger', 'item removed');\n  const newList = list.filter ((item) => item.id !== id)\n  setList (newList)  //newList will be displayed\n  // if item.id does not match with new id, then it will be added to new array - ID DID NOT MATCH\n}\n\n//list was the statevalue\nfunction editItem (id) {\n  const specificItem = list.find (item => item.id === id)\n    setIsEditing (true)\n    setEditID (id)\n    setName (specificItem.title) //display which item am i editing in the input\n  }\n//here we want to find the id whose id matches the item.id\n\n    useEffect (( ) => {\n      localStorage.setItem ('list', JSON.stringify (list))\n    }, [list])\n\n\n  return <section className=\"section-center\">\n      <form className='grocery-form' onSubmit={handleSubmit}>\n            {alert.show && <Alert {...alert} removeAlert={showAlert}  list={list} />}\n            <h3>Grocery Buddy</h3>\n            <div className='form-control'>\n                  <input type='text' className='grocery' placeholder='e.g. lots of bacon' value={name} onChange={ (e) => setName(e.target.value)}  />\n                  <button type='submit' className='submit-btn'>\n                      {isEditing? \"edit\": \"submit\"}\n                  </button>\n            </div>\n      </form>\n      {list.length > 0 && (\n        <div className='grocery-container'>\n        <List items={list}  removeItem={removeItem} editItem={editItem}/>\n        <button className='clear-btn' onClick={clearList}>Clear Items</button>\n      </div>\n      )}\n  </section>\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}