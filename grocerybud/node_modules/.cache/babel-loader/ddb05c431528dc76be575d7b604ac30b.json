{"ast":null,"code":"var _jsxFileName = \"/Users/tarantino/Desktop/grocerybuddy/grocerybud/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from './List';\nimport Alert from './Alert';\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem('list');\n\n  if (list) {\n    return JSON.parse(localStorage.getItem('list'));\n  } else {\n    return [];\n  }\n};\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [list, setList] = useState(getLocalStorage());\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: '',\n    type: ''\n  });\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!name) {\n      showAlert(true, 'danger', 'please enter a value');\n    } else if (name && isEditing) {\n      //if name is true (there's a value inside, and isEditing is true...then do this...)\n      setList(list.map(item => {\n        if (item.id === editID) {\n          //if item.id matches w/ item id, then...\n          return { ...item,\n            title: name\n          }; // change title to whatever is statevalue right now\n        }\n\n        return item;\n      }));\n      setName(\"\");\n      setEditID(null);\n      setIsEditing(false);\n      showAlert(true, 'success', 'list updated');\n    } else {\n      const newItem = {\n        id: Date.now() + Math.random(),\n        title: name\n      };\n      setList([...list, newItem]);\n      setName(\"\");\n      showAlert(true, 'success', `${newItem.title} added to the list`);\n    }\n  }\n\n  function showAlert(show = false, type = \"\", msg = \"\") {\n    setAlert({\n      show,\n      type,\n      msg\n    });\n  }\n\n  function clearList() {\n    showAlert(true, 'danger', 'empty list');\n    setList(\"\");\n  }\n\n  function removeItem(id) {\n    showAlert(true, 'danger', 'item removed');\n    const newList = list.filter(item => item.id !== id);\n    setList(newList); //newList will be displayed\n    // if item.id does not match with new id, then it will be added to new array - ID DID NOT MATCH\n  } //list was the statevalue\n\n\n  function editItem(id) {\n    const specificItem = list.find(item => item.id === id);\n    setIsEditing(true);\n    setEditID(id);\n    setName(specificItem.title); //display which item am i editing in the input\n  } //here we want to find the id whose id matches the item.id\n\n\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(list));\n  }, [list]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"grocery-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, alert.show && /*#__PURE__*/React.createElement(Alert, Object.assign({}, alert, {\n    removeAlert: showAlert,\n    list: list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Grocery Buddy\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"grocery\",\n    placeholder: \"e.g. lots of bacon\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, isEditing ? \"edit\" : \"submit\"))), list.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grocery-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    items: list,\n    removeItem: removeItem,\n    editItem: editItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-btn\",\n    onClick: clearList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Clear Items\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tarantino/Desktop/grocerybuddy/grocerybud/src/App.js"],"names":["React","useState","useEffect","List","Alert","getLocalStorage","list","localStorage","getItem","JSON","parse","App","name","setName","setList","isEditing","setIsEditing","editID","setEditID","alert","setAlert","show","msg","type","handleSubmit","e","preventDefault","showAlert","map","item","id","title","newItem","Date","now","Math","random","clearList","removeItem","newList","filter","editItem","specificItem","find","setItem","stringify","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Alert from './Alert'\n\nconst getLocalStorage = () => {\n      let list = localStorage.getItem ('list')\n      if (list) {\n        return JSON.parse (localStorage.getItem ('list'))\n      }\n      else {\n        return []\n      }\n}\n\nfunction App() {\n  const [name, setName] = useState (\"\")\n  const [list, setList] = useState (getLocalStorage ())\n  const [isEditing, setIsEditing] = useState (false)\n  const [editID, setEditID] = useState (null)\n  const [alert, setAlert] = useState ({show: false, msg: '', type: '' })\n\nfunction handleSubmit (e) {\n  e.preventDefault ()\n  if (!name) {\n    showAlert (true, 'danger', 'please enter a value')\n  }\n  else if (name && isEditing) {   //if name is true (there's a value inside, and isEditing is true...then do this...)\n    setList (list.map ((item) => {\n      if (item.id === editID) {  //if item.id matches w/ item id, then...\n        return {...item, title: name} // change title to whatever is statevalue right now\n      }\n        return item\n    }))\n      setName (\"\");\n      setEditID (null)\n      setIsEditing (false)\n      showAlert (true, 'success', 'list updated')\n  } \n  else {\n    const newItem = {\n      id: Date.now() + Math.random(),\n      title: name\n};\n      setList ([... list, newItem])\n      setName (\"\")\n      showAlert (true, 'success', `${newItem.title} added to the list`)\n  }\n}\n\n\nfunction showAlert (show=false, type=\"\", msg=\"\") {\n    setAlert ({show, type, msg})\n}\n\nfunction clearList () {\n    showAlert (true, 'danger', 'empty list')\n    setList (\"\")\n}\n\nfunction removeItem (id) {\n  showAlert (true, 'danger', 'item removed');\n  const newList = list.filter ((item) => item.id !== id)\n  setList (newList)  //newList will be displayed\n  // if item.id does not match with new id, then it will be added to new array - ID DID NOT MATCH\n}\n\n//list was the statevalue\nfunction editItem (id) {\n  const specificItem = list.find (item => item.id === id)\n    setIsEditing (true)\n    setEditID (id)\n    setName (specificItem.title) //display which item am i editing in the input\n  }\n//here we want to find the id whose id matches the item.id\n\n    useEffect (( ) => {\n      localStorage.setItem ('list', JSON.stringify (list))\n    }, [list])\n\n\n  return <section className=\"section-center\">\n      <form className='grocery-form' onSubmit={handleSubmit}>\n            {alert.show && <Alert {...alert} removeAlert={showAlert}  list={list} />}\n            <h3>Grocery Buddy</h3>\n            <div className='form-control'>\n                  <input type='text' className='grocery' placeholder='e.g. lots of bacon' value={name} onChange={ (e) => setName(e.target.value)}  />\n                  <button type='submit' className='submit-btn'>\n                      {isEditing? \"edit\": \"submit\"}\n                  </button>\n            </div>\n      </form>\n      {list.length > 0 && (\n        <div className='grocery-container'>\n        <List items={list}  removeItem={removeItem} editItem={editItem}/>\n        <button className='clear-btn' onClick={clearList}>Clear Items</button>\n      </div>\n      )}\n  </section>\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}